{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/shoelace.ts", "../app/routes/simple-pwd-generator.privacy.tsx", "../app/layouts/PageWithDrawer/index.tsx", "../app/layouts/PageWithDrawer/PageDrawer.tsx", "../app/zustand/index.ts", "../app/routes/simple-pwd-generator._index.tsx", "../app/routes/_index.tsx", "../app/components/Home.tsx", "../app/routes/resume.tsx", "../app/components/Resume/index.tsx", "../app/components/Resume/skills.ts", "../app/components/Resume/types.ts", "../app/constants/dates.ts", "../app/components/Resume/jobs.ts", "../app/components/Resume/Skill.tsx", "../app/components/Resume/Job.tsx", "../app/components/Resume/schools.ts", "../app/components/Resume/School.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  json,\n  useLoaderData } from\n\"@remix-run/react\";\nimport styles from \"./tailwind.css\";\n\nimport shoelaceLightStyles from \"@shoelace-style/shoelace/dist/themes/light.css\";\nimport shoelaceDarkStyles from \"@shoelace-style/shoelace/dist/themes/dark.css\";\n\nimport { ShoelaceContext, useShoelace } from \"./shoelace\";\nimport { Suspense } from \"react\";\nimport { sessionStorage } from \"./session.server\";\nimport { authenticator } from \"./utils/auth.server\";\nimport Toast from \"~/components/Toast\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: shoelaceLightStyles },\n{ rel: \"stylesheet\", href: shoelaceDarkStyles },\n{ rel: \"stylesheet\", href: styles },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : [])];\n\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const url = new URL(request.url);\n\n  return json({\n    BASE_URL: url.origin.includes(\"localhost\") ?\n    url.origin :\n    url.origin.replace(\"http:\", \"https:\"),\n    gaTrackingId: process.env.GA_TRACKING_ID\n  });\n};\nexport default function App() {\n  const { BASE_URL, gaTrackingId } = useLoaderData<typeof loader>();\n  const shoelace = useShoelace({ URL: BASE_URL });\n  return (\n    <html lang=\"en\" className=\"h-[100vh] p-0 m-0\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <style>{`\n          body { font-family: var(--sl-font-sans); }\n        `}</style>\n        <Links />\n      </head>\n      <body className=\"h-full p-0 m-0\">\n        {!gaTrackingId ? null :\n        <>\n            <script\n            async\n            type=\"text/javascript\"\n            src=\"https://app.termly.io/resource-blocker/c7c42b5a-93d9-4dd8-98d4-7c8431498905\">\n          </script>\n            <script\n            async\n            src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`} />\n\n            <script\n            async\n            id=\"gtag-init\"\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', '${gaTrackingId}', {\n                  page_path: window.location.pathname,\n                });\n              `\n            }} />\n\n            <noscript>\n              <iframe\n              src={`https://www.googletagmanager.com/ns.html?id=${gaTrackingId}`}\n              height=\"0\"\n              width=\"0\"\n              className=\"hidden\">\n            </iframe>\n            </noscript>\n          </>}\n\n        <ShoelaceContext.Provider value={shoelace}>\n          <Outlet />\n        </ShoelaceContext.Provider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import {\n  SlButton,\n  SlDrawer,\n  SlIcon,\n  SlInput,\n  SlTab,\n  SlTabGroup,\n  SlTabPanel,\n  SlSelect,\n  SlOption,\n  SlDropdown,\n  SlMenu,\n  SlMenuItem,\n  SlMenuLabel,\n  SlAvatar,\n  SlCard,\n  SlIconButton,\n  SlTooltip,\n  SlCheckbox,\n  SlDivider,\n  SlAlert,\n  SlSpinner,\n  SlSwitch,\n  SlDetails,\n  SlCarousel,\n  SlCarouselItem,\n} from \"@shoelace-style/shoelace/dist/react\";\nimport { createContext, useEffect, useRef, useState } from \"react\";\n\nconst nullComponent = () => null;\n\ntype ShoelaceComponents = {\n  SlButton: typeof nullComponent | typeof SlButton;\n  SlInput: typeof nullComponent | typeof SlInput;\n  SlDrawer: typeof nullComponent | typeof SlDrawer;\n  SlIcon: typeof nullComponent | typeof SlIcon;\n  SlTabGroup: typeof nullComponent | typeof SlTabGroup;\n  SlTab: typeof nullComponent | typeof SlTab;\n  SlTabPanel: typeof nullComponent | typeof SlTabPanel;\n  SlSelect: typeof nullComponent | typeof SlSelect;\n  SlOption: typeof nullComponent | typeof SlOption;\n  SlDropdown: typeof nullComponent | typeof SlDropdown;\n  SlMenu: typeof nullComponent | typeof SlMenu;\n  SlMenuItem: typeof nullComponent | typeof SlMenuItem;\n  SlMenuLabel: typeof nullComponent | typeof SlMenuLabel;\n  SlAvatar: typeof nullComponent | typeof SlAvatar;\n  SlCard: typeof nullComponent | typeof SlCard;\n  SlIconButton: typeof nullComponent | typeof SlIconButton;\n  SlTooltip: typeof nullComponent | typeof SlTooltip;\n  SlCheckbox: typeof nullComponent | typeof SlCheckbox;\n  SlDivider: typeof nullComponent | typeof SlDivider;\n  SlAlert: typeof nullComponent | typeof SlAlert;\n  SlSpinner: typeof nullComponent | typeof SlSpinner;\n  SlSwitch: typeof nullComponent | typeof SlSwitch;\n  SlDetails: typeof nullComponent | typeof SlDetails;\n  SlCarousel: typeof nullComponent | typeof SlCarousel;\n  SlCarouselItem: typeof nullComponent | typeof SlCarouselItem;\n};\n\nconst nullComponents: ShoelaceComponents = {\n  SlButton: () => null,\n  SlInput: () => null,\n  SlDrawer: () => null,\n  SlIcon: () => null,\n  SlTabGroup: () => null,\n  SlTab: () => null,\n  SlTabPanel: () => null,\n  SlSelect: () => null,\n  SlOption: () => null,\n  SlDropdown: () => null,\n  SlMenu: () => null,\n  SlMenuItem: () => null,\n  SlMenuLabel: () => null,\n  SlAvatar: () => null,\n  SlCard: () => null,\n  SlIconButton: () => null,\n  SlTooltip: () => null,\n  SlCheckbox: () => null,\n  SlDivider: () => null,\n  SlAlert: () => null,\n  SlSpinner: () => null,\n  SlSwitch: () => null,\n  SlDetails: () => null,\n  SlCarousel: () => null,\n  SlCarouselItem: () => null,\n};\n\nexport const ShoelaceContext = createContext(nullComponents);\n\nexport function useShoelace({ URL }: { URL: string }) {\n  const loaded = useRef(false);\n\n  const [components, setComponents] =\n    useState<ShoelaceComponents>(nullComponents);\n\n  useEffect(() => {\n    if (loaded.current) {\n      return;\n    }\n\n    loaded.current = true;\n\n    import(\"@shoelace-style/shoelace/dist/utilities/base-path.js\").then(\n      async ({ setBasePath }) => {\n        setBasePath(`${URL}/shoelace`);\n\n        import(\"@shoelace-style/shoelace/dist/react\").then((result) => {\n          setComponents({\n            SlButton: result.SlButton,\n            SlInput: result.SlInput,\n            SlDrawer: result.SlDrawer,\n            SlIcon: result.SlIcon,\n            SlTabGroup: result.SlTabGroup,\n            SlTab: result.SlTab,\n            SlTabPanel: result.SlTabPanel,\n            SlSelect: result.SlSelect,\n            SlOption: result.SlOption,\n            SlDropdown: result.SlDropdown,\n            SlMenu: result.SlMenu,\n            SlMenuItem: result.SlMenuItem,\n            SlMenuLabel: result.SlMenuLabel,\n            SlAvatar: result.SlAvatar,\n            SlCard: result.SlCard,\n            SlIconButton: result.SlIconButton,\n            SlTooltip: result.SlTooltip,\n            SlCheckbox: result.SlCheckbox,\n            SlDivider: result.SlDivider,\n            SlAlert: result.SlAlert,\n            SlSpinner: result.SlSpinner,\n            SlSwitch: result.SlSwitch,\n            SlDetails: result.SlDetails,\n            SlCarousel: result.SlCarousel,\n            SlCarouselItem: result.SlCarouselItem,\n          });\n        });\n      }\n    );\n  }, [URL]);\n\n  return components;\n}\n", "import { LinksFunction } from \"@remix-run/node\";\nimport privacyCss from \"~/assets/css/privacy.css\";\nimport PageWithDrawer from \"~/layouts/PageWithDrawer\";\nconst privacy = require(\"~/html/privacy.txt\");\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: privacyCss }];\n\nexport default function SimplePwdGeneratorPrivacy() {\n  return (\n    <PageWithDrawer\n      mainChildren={\n      <div\n        className=\"bg-white p-10\"\n        dangerouslySetInnerHTML={{ __html: privacy }}>\n      </div>} />);\n\n\n\n}", "import { Link, useFetcher, useNavigate } from \"@remix-run/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport PageDrawer from \"./PageDrawer\";\nimport { useTheme } from \"~/zustand\";\n\nexport type PageWithDrawerProps = {\n  drawerChildren?: React.ReactNode[]; // array of <li> elements\n  mainChildren?: React.ReactNode;\n  additionalMenuItems?: React.ReactNode;\n  title?: string;\n};\n\nexport default function PageWithDrawer({\n  drawerChildren,\n  mainChildren,\n  additionalMenuItems,\n  title,\n}: PageWithDrawerProps) {\n  const navigate = useNavigate();\n  const [open, setStateOpen] = useState(false);\n  const { theme, toggleTheme } = useTheme();\n  const {\n    SlDropdown,\n    SlIconButton,\n    SlMenu,\n    SlMenuItem,\n    SlMenuLabel,\n    SlAvatar,\n    SlIcon,\n    SlSwitch,\n  } = useContext(ShoelaceContext);\n\n  const setOpen = (state: boolean) => {\n    setStateOpen(state);\n  };\n\n  return (\n    <>\n      <PageDrawer open={open} setOpen={setOpen} />\n      <div className={`${theme} h-full min-h-[100vh] m-0 p-0`} key={theme}>\n        <div className=\"navbar\">\n          <div className=\"flex-1\">\n            <SlIconButton\n              name=\"list\"\n              onClick={() => setStateOpen((open) => !open)}\n              className=\"text-3xl font-extrabold\"\n            />\n            <Link to=\"/\" className=\"btn btn-ghost text-xl\">\n              <span className=\"hidden lg:block\">eliselkin</span>\n            </Link>\n          </div>\n          <div className=\"\">{additionalMenuItems}</div>\n          <div className=\"\">\n            <SlIcon name=\"brightness-high\" className=\"text-2xl mr-2\" />\n            <SlSwitch\n              checked={theme === \"sl-theme-dark\"}\n              onSlChange={() => toggleTheme()}\n            />\n            <SlIcon name=\"moon\" className=\"text-2xl ml-0.5\" />\n          </div>\n        </div>\n        <div className=\"main-children scrollbar-thin scrollbar-track-gray-100 scrollbar-thumb-gray-600\">\n          {!!title && <h1 className=\"text-3xl font-bold mb-8\">{title}</h1>}\n          {mainChildren}\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { Link, useNavigate } from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport { useTheme } from \"~/zustand\";\n\nexport default function PageDrawer({\n  open,\n  setOpen,\n}: {\n  open: boolean;\n  setOpen: (state: boolean) => void;\n}) {\n  const { SlDrawer, SlMenuItem } = useContext(ShoelaceContext);\n  const { theme } = useTheme();\n  const navigate = useNavigate();\n  return (\n    <SlDrawer\n      placement=\"start\"\n      open={open}\n      onSlAfterHide={() => setOpen(false)}\n      className={`${theme}`}\n    >\n      <SlMenuItem onClick={() => navigate(\"/\")}>About Eli</SlMenuItem>\n      <SlMenuItem onClick={() => navigate(\"/resume\")}>Resume</SlMenuItem>\n      <SlMenuItem onClick={() => navigate(\"/simple-pwd-generator\")}>\n        App: simple-pwd-generator\n      </SlMenuItem>\n    </SlDrawer>\n  );\n}\n", "import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\ninterface ThemeStore {\n  theme: \"sl-theme-light\" | \"sl-theme-dark\";\n  toggleTheme: () => void;\n  changeTheme: (theme: \"sl-theme-dark\" | \"sl-theme-light\") => void;\n}\nexport const useTheme = create(\n  persist<ThemeStore>(\n    (set, get) => ({\n      theme: \"sl-theme-dark\",\n      toggleTheme: () =>\n        set((state: { theme: string }) => ({\n          theme:\n            state.theme === \"sl-theme-dark\"\n              ? \"sl-theme-light\"\n              : \"sl-theme-dark\",\n        })),\n      changeTheme: (theme: \"sl-theme-dark\" | \"sl-theme-light\") =>\n        set({ theme }),\n    }),\n    { name: \"theme-storage\", storage: createJSONStorage(() => localStorage) }\n  )\n);\n", "import { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport Home from \"~/components/Home\";\nimport PageWithDrawer from \"~/layouts/PageWithDrawer\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport { useTheme } from \"~/zustand\";\nimport pwMac1 from \"~/assets/img/pw-mac-1.png\";\nimport pwMac2 from \"~/assets/img/pw-mac-2.png\";\nimport pwMac3 from \"~/assets/img/pw-mac-3.png\";\nimport pwMac4 from \"~/assets/img/pw-mac-4.png\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"simple-pwd-generator\" },\n    {\n      property: \"og:title\",\n      content: \"simple-pwd-generator\",\n    },\n  ];\n};\n\nexport default function SimplePwdGeneratorHome() {\n  const { theme } = useTheme();\n  const { SlCarousel, SlCarouselItem } = useContext(ShoelaceContext);\n  return (\n    <PageWithDrawer\n      title=\"simple-pwd-generator\"\n      mainChildren={\n        <>\n          <h2 className=\"text-2xl font-bold\">About</h2>\n          <p>\n            This is a simple password generator. It is a work in progress and\n            will be updated over time. I saw that there were other password\n            generators but none were open source. The code fore this project is\n            available on{\" \"}\n            <Link\n              className={`link link-hover underline ${\n                theme === \"sl-theme-dark\" ? \"link-accent\" : \"link-primary\"\n              }`}\n              to=\"https://github.com/eselkin/simple-pwd-generator\"\n            >\n              GitHub\n            </Link>\n          </p>\n          <h2 className=\"text-2xl font-bold mt-4 md:mt-6\">Features</h2>\n          <p>\n            <ul className=\"list list-disc pl-6\">\n              <li>generate random character passwords</li>\n              <li>generate random word passwords</li>\n              <li>options for English and/or Spanish dictionaries</li>\n              <li>configurable special characters</li>\n            </ul>\n          </p>\n          <div className=\"w-11/12\">\n            <SlCarousel loop autoplay navigation pagination mouseDragging>\n              <SlCarouselItem className=\"m-4\">\n                <img\n                  src={pwMac1}\n                  alt=\"unselected password type\"\n                  className=\"h-full\"\n                />\n              </SlCarouselItem>\n              <SlCarouselItem>\n                <img src={pwMac2} alt=\"character password\" className=\"w-full\" />\n              </SlCarouselItem>\n              <SlCarouselItem>\n                <img src={pwMac3} alt=\"word password type\" className=\"w-full\" />\n              </SlCarouselItem>\n              <SlCarouselItem>\n                <img src={pwMac4} alt=\"settings\" className=\"w-full\" />\n              </SlCarouselItem>\n            </SlCarousel>\n          </div>\n          <h2 className=\"text-2xl font-bold mt-4 md:mt-6\">Privacy</h2>\n          We don't record or store any information about your passwords you\n          generate or your system besides the data that apple already collects\n          on downloads. A full privacy policy is available{\" \"}\n          <Link\n            className={`link link-hover underline ${\n              theme === \"sl-theme-dark\" ? \"link-accent\" : \"link-primary\"\n            }`}\n            to=\"/simple-pwd-generator/privacy\"\n          >\n            here\n          </Link>\n          .\n        </>\n      }\n      additionalMenuItems={\n        <div className=\"flex flex-row space-x-2 items-center justify-center\"></div>\n      }\n    />\n  );\n}\n", "import { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport Home from \"~/components/Home\";\nimport PageWithDrawer from \"~/layouts/PageWithDrawer\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Eli Selkin\" },\n    {\n      property: \"og:title\",\n      content: \"Eli Selkin\",\n    },\n  ];\n};\n\nexport default function Main() {\n  return (\n    <PageWithDrawer\n      title=\"Welcome\"\n      mainChildren={<Home />}\n      additionalMenuItems={\n        <div className=\"flex flex-row space-x-2 items-center justify-center\"></div>\n      }\n    />\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport { useTheme } from \"~/zustand\";\n\nexport default function Home() {\n  const { theme } = useTheme();\n  return (\n    <div>\n      <p>\n        I&apos;m Eli, founder of{\" \"}\n        <Link\n          className={`link link-hover underline ${\n            theme === \"sl-theme-dark\" ? \"link-accent\" : \"link-primary\"\n          } `}\n          to=\"https://extendtherapy.com\"\n        >\n          ExtendTherapy\n        </Link>{\" \"}\n        and cofounder of several other technology companies (Upful, Kopanya,\n        etc.).\n      </p>\n      <p>Coming soon... blog/whitepapers, talks, and a revamped resume.</p>\n    </div>\n  );\n}\n", "import ResumeComponent from \"~/components/Resume\";\nimport PageWithDrawer from \"~/layouts/PageWithDrawer\";\n\nexport default function Resume() {\n  return <PageWithDrawer mainChildren={<ResumeComponent />} />;\n}\n", "import React, { useContext, useMemo, useState } from \"react\";\nimport { skills } from \"./skills\";\nimport { jobs } from \"./jobs\";\nimport {\n  ResumeSkill,\n  ResumeSkillProficiency,\n  ResumeSkillType,\n  ResumeType,\n} from \"./types\";\nimport { round, startCase } from \"lodash-es\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport { DateTime } from \"luxon\";\nimport SkillComponent from \"./Skill\";\nimport JobComponent from \"./Job\";\nimport { schools } from \"./schools\";\nimport School from \"./School\";\nexport default function ResumeComponent() {\n  const { SlTooltip, SlDetails, SlSelect, SlOption } =\n    useContext(ShoelaceContext);\n\n  const [selectedResumeType, setSelectedResumeType] = useState<ResumeType>(\n    ResumeType.Architect\n  );\n  const skillObject = useMemo(() => {\n    const skillsTemp = skills.reduce((acc, skill) => {\n      if (skill.resumeTypes.includes(selectedResumeType)) {\n        acc[`${skill.skillType}`] = [\n          ...(acc[`${skill.skillType}`] || []),\n          skill,\n        ];\n      }\n      return acc;\n    }, {} as Record<string, ResumeSkill[]>);\n    for (const key of Object.keys(skillsTemp)) {\n      skillsTemp[key].sort((a, b) => b.profieciency - a.profieciency);\n    }\n    return skillsTemp;\n  }, [skills, selectedResumeType]);\n  return (\n    <div>\n      <h1 className=\"text-3xl\">Eli Selkin</h1>\n      <h2 className=\"mb-4\">L.C.S.W. BBS CA #27109, M.S.</h2>\n      <SlSelect\n        onSlChange={(e) => {\n          setSelectedResumeType(ResumeType[e.target.value]);\n        }}\n        value={`${selectedResumeType}`}\n      >\n        <h2 className=\"text-xl mb-2\" slot=\"label\">\n          Resume Type\n        </h2>\n        {Object.keys(ResumeType).map((rt, i) =>\n          /[0-9]/.test(rt) ? null : (\n            <SlOption key={`resume-type-${i}`} value={rt}>\n              {startCase(rt)}\n            </SlOption>\n          )\n        )}\n      </SlSelect>\n      <h2 className=\"text-xl mt-4 mb-2\">Skills (sorted by skill level)</h2>\n      {Object.entries(skillObject).map(([key, value]) => (\n        <SlDetails key={`skill-type-${key}`}>\n          <h3 slot=\"summary\" className=\"text-lg font-medium\">\n            {startCase(ResumeSkillType[parseInt(key)])}\n          </h3>\n          <div className=\"-mt-2\">\n            {value.map((skill, i, a) => (\n              <SkillComponent\n                key={`skill-${skill.id}`}\n                skill={skill}\n                isLast={a.length - 1 === i}\n              />\n            ))}\n          </div>\n        </SlDetails>\n      ))}\n      <h2 className=\"text-xl mt-4 mb-2\">Employment</h2>\n      {jobs\n        .filter((j) => j.resumeTypes.includes(selectedResumeType))\n        .sort((a, b) => b.startDate.toMillis() - a.startDate.toMillis())\n        .map((j) => (\n          <JobComponent\n            key={`job-${j.id}`}\n            j={j}\n            selectedResumeType={selectedResumeType}\n          />\n        ))}\n      <h2 className=\"text-xl mt-4 mb-2\">Education</h2>\n      {schools\n        .filter((s) => s.resumeTypes.includes(selectedResumeType))\n        .sort((a, b) => b.startDate.toMillis() - a.startDate.toMillis())\n        .map((s) => (\n          <School\n            key={`school-${s.id}`}\n            s={s}\n            resumeType={selectedResumeType}\n          />\n        ))}\n    </div>\n  );\n}\n", "import { DateTime } from \"luxon\";\nimport {\n  ResumeSkill,\n  ResumeSkillProficiency,\n  ResumeSkillType,\n  ResumeType,\n} from \"./types\";\nimport { yyyyMMdd } from \"~/constants/dates\";\n\nexport const skills: ResumeSkill[] = [\n  {\n    id: 1,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"JavaScript\",\n    startDate: DateTime.fromFormat(\"2007-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 2,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"TypeScript\",\n    startDate: DateTime.fromFormat(\"2017-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 3,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"Python\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n    subtitle: \"Including: 2, 3, pydantic\",\n  },\n  {\n    id: 4,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"Ruby\",\n    startDate: DateTime.fromFormat(\"2020-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 5,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"Java\",\n    startDate: DateTime.fromFormat(\"2008-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 6,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"HTML\",\n    startDate: DateTime.fromFormat(\"1997-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 7,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"node\",\n    startDate: DateTime.fromFormat(\"2015-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 8,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"bun\",\n    startDate: DateTime.fromFormat(\"2024-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 9,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"Django\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 10,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorDataEngineer,\n    ],\n    title: \"C++\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 11,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorDataEngineer,\n    ],\n    title: \"Rust\",\n    startDate: DateTime.fromFormat(\"2022-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 12,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"R\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 13,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"React\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 14,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"Remix\",\n    startDate: DateTime.fromFormat(\"2023-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 15,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    title: \"Next.js\",\n    startDate: DateTime.fromFormat(\"2021-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 16,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"PyTorch\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 17,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"TensorFlow\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 18,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"scikit-learn\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 19,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n    ],\n    title: \"pandas\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 20,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n    ],\n    title: \"numpy\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 21,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"spaCy\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 22,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"fastai\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 23,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n    ],\n    title: \"Hugging Face\",\n    startDate: DateTime.fromFormat(\"2021-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 24,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Apache Spark (pySpark)\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 25,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Apache Kafka\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 26,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GCP PubSub\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 27,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"AWS Kinesis\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 28,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"AWS Glue\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 29,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"AWS S3\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 30,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"AWS Redshift\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 31,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"gRPC\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 32,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Kubernetes\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 33,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Docker\",\n    startDate: DateTime.fromFormat(\"2015-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 34,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Git\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 35,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GitHub\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 36,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GitLab\",\n    startDate: DateTime.fromFormat(\"2012-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 37,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Airflow\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 38,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Terraform\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 39,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Jenkins\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 40,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GitHub Actions\",\n    startDate: DateTime.fromFormat(\"2020-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 41,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"PostgreSQL\",\n    startDate: DateTime.fromFormat(\"2014-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 42,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Aurora\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 43,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"MongoDB\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Expert,\n  },\n  {\n    id: 44,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Redis\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 45,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"BigQuery\",\n    startDate: DateTime.fromFormat(\"2019-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 46,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"MySQL\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 47,\n    skillType: ResumeSkillType.Methodology,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Agile\",\n    startDate: DateTime.fromFormat(\"2014-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 48,\n    skillType: ResumeSkillType.Methodology,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"CI/CD\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 49,\n    skillType: ResumeSkillType.FrameworksAndRuntimes,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Spring Boot\",\n    startDate: DateTime.fromFormat(\"2015-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 50,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GCP Cloud Functions\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 51,\n    skillType: ResumeSkillType.MachineLearningAndDataEngineering,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GCP Cloud Storage\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 52,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Haskell\",\n    startDate: DateTime.fromFormat(\"2021-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2022-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 53,\n    skillType: ResumeSkillType.Other,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Cardano Smart Contracts\",\n    startDate: DateTime.fromFormat(\"2021-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2022-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 54,\n    skillType: ResumeSkillType.Database,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Neo4j\",\n    startDate: DateTime.fromFormat(\"2019-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2023-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 55,\n    skillType: ResumeSkillType.Libraries,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"GraphQL\",\n    subtitle: \"Including: Apollo, Prisma\",\n    startDate: DateTime.fromFormat(\"2018-01-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 56,\n    skillType: ResumeSkillType.DevOps,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.MachineLearningEngineer,\n    ],\n    title: \"Slurm (resource management)\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Intermediate,\n  },\n  {\n    id: 57,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"CUDA C++\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 58,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"OpenMP\",\n    subtitle: \"Including: C++ and Fortran\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 59,\n    skillType: ResumeSkillType.Languages,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    title: \"Assembly\",\n    subtitle: \"Including: x86 and MIPS\",\n    startDate: DateTime.fromFormat(\"2016-01-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-12-31\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Basic,\n  },\n  {\n    id: 60,\n    skillType: ResumeSkillType.TherapyModalities,\n    resumeTypes: [ResumeType.Therapist],\n    title: \"Cognitive Behavioral Therapy (CBT)\",\n    startDate: DateTime.fromFormat(\"2001-08-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 61,\n    skillType: ResumeSkillType.TherapyModalities,\n    resumeTypes: [ResumeType.Therapist],\n    title: \"Group-Based Cognitive Behavioral Therapy (CBT)\",\n    startDate: DateTime.fromFormat(\"2001-08-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n  {\n    id: 62,\n    skillType: ResumeSkillType.TherapyModalities,\n    resumeTypes: [ResumeType.Therapist],\n    title: \"Aging and Family Therapy\",\n    startDate: DateTime.fromFormat(\"2001-08-01\", yyyyMMdd),\n    profieciency: ResumeSkillProficiency.Advanced,\n  },\n];\n", "import { DateTime } from \"luxon\";\n\nexport enum ResumeType {\n  Architect = \"Architect\",\n  SeniorSoftwareEngineer = \"SeniorSoftwareEngineer\",\n  SeniorBackendEngineer = \"SeniorBackendEngineer\",\n  SeniorFullstackEngineer = \"SeniorFullstackEngineer\",\n  MachineLearningEngineer = \"MachineLearningEngineer\",\n  SeniorDataEngineer = \"SeniorDataEngineer\",\n  Therapist = \"Therapist\",\n}\n\nexport type ResumeItem = {\n  id: number;\n  resumeTypes: ResumeType[];\n  startDate: DateTime;\n  endDate?: DateTime;\n  title: string;\n  subtitle?: string;\n};\ntype Accomplishment<T, K> = [T, K];\ntype Accomplishments<T, K> = Accomplishment<T, K>[];\nexport type ResumeItemDescription = {\n  description: string;\n  skillsUsed: number[];\n  accomplishments: Accomplishments<ResumeType[], string[]>;\n};\n\nexport type ResumeItemLocation = {\n  location: string;\n};\n\nexport enum ResumeSkillType {\n  Languages,\n  FrameworksAndRuntimes,\n  Libraries,\n  Database,\n  DevOps,\n  Methodology,\n  MachineLearningAndDataEngineering,\n  Other,\n  TherapyModalities,\n}\n\nexport enum ResumeSkillProficiency {\n  Basic = 0,\n  Intermediate = 1,\n  Advanced = 2,\n  Expert = 3,\n}\n\nexport type ResumeSkill = ResumeItem & {\n  skillType: ResumeSkillType;\n  profieciency: ResumeSkillProficiency;\n};\n\nexport type ResumeJob = ResumeItem & ResumeItemDescription & ResumeItemLocation;\nexport type ResumeEducation = ResumeItem &\n  ResumeItemDescription &\n  ResumeItemLocation & {\n    GPA: number;\n  };\n", "export const yyyyMMdd = \"yyyy-MM-dd\";\n", "import { DateTime } from \"luxon\";\nimport { ResumeJob, ResumeType } from \"./types\";\nimport { yyyyMMdd } from \"~/constants/dates\";\n\nexport const jobs: ResumeJob[] = [\n  {\n    id: 1,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorDataEngineer,\n    ],\n    startDate: DateTime.fromFormat(\"2018-10-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2023-07-01\", yyyyMMdd),\n    title: \"Cofounder and CTO\",\n    subtitle: \"Upful, Inc.\",\n    description: \"\",\n    location: \"Remote (Santa Monica, CA)\",\n    skillsUsed: [\n      1, 2, 3, 6, 7, 8, 13, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31,\n      32, 33, 34, 35, 37, 40, 42, 43, 44, 45, 47, 48,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.MachineLearningEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.SeniorDataEngineer,\n          ResumeType.SeniorSoftwareEngineer,\n        ],\n        [\n          \"Constructed NLP architecture for real-time language assessment\",\n          \"Constructed a Kubernetes-based system for orchestrating the platform (both GCP GKE and AWS EKS)\",\n          \"Developed gRPC APIs for real-time language assessment\",\n          \"Developed Python real-time NLP pipeline\",\n          \"Developed private gRPC typescript React library for language assessment\",\n        ],\n      ],\n    ],\n  },\n  {\n    id: 2,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.SeniorSoftwareEngineer,\n          ResumeType.MachineLearningEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorFullstackEngineer,\n        ],\n        [\n          \"Built kopanya.org ecosystem for evaluation commissioning using Remix for SSR React\",\n          \"Built international subscription system including GCP functions and pubsub mechanisms for invoicing\",\n        ],\n      ],\n    ],\n    description: \"\",\n    startDate: DateTime.fromFormat(\"2023-07-01\", yyyyMMdd),\n    title: \"Cofounder and CTO\",\n    subtitle: \"Kopanya, Inc.\",\n    location: \"Remote (Pasadena, CA)\",\n    skillsUsed: [\n      1, 2, 6, 7, 8, 13, 14, 26, 50, 51, 33, 34, 35, 40, 43, 44, 47, 48,\n    ],\n  },\n  {\n    id: 3,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.SeniorSoftwareEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorFullstackEngineer,\n        ],\n        [\n          \"Built statistical anlalysis dashboard for self-report data\",\n          \"Built support for self-report data ingestion and processing\",\n          \"Fine-tuned LLM for batch processing of open-ended self-reports (e.g. thought record patterns)\",\n        ],\n      ],\n    ],\n    description: \"\",\n    startDate: DateTime.fromFormat(\"2023-08-01\", yyyyMMdd),\n    title: \"Founder\",\n    subtitle: \"Extend Therapy\",\n    location: \"Remote (Pasadena, CA)\",\n    skillsUsed: [\n      1, 2, 3, 6, 7, 11, 13, 14, 16, 21, 23, 33, 34, 35, 40, 41, 44, 48, 50, 51,\n    ],\n  },\n  {\n    id: 4,\n    resumeTypes: [\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.SeniorSoftwareEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.Architect,\n          ResumeType.SeniorDataEngineer,\n        ],\n        [\n          \"Supported development of VA.gov APIs (RoR) to provide facilities data\",\n          \"Supported accessibility standards for Veterans Administration website\",\n          \"Built support for police statistics data ingestion and deployed Veteran facing pages for future VA Police reporting\",\n          \"Built and deployed components in Liquid templating language and React.js, adhering to stringent accessibility standards\",\n        ],\n      ],\n    ],\n    description: \"\",\n    startDate: DateTime.fromFormat(\"2023-07-01\", yyyyMMdd),\n    title: \"Software Engineer III\",\n    subtitle: \"Agile Six Applications, Inc.\",\n    location: \"Remote (San Diego, CA)\",\n    skillsUsed: [1, 2, 4, 6, 7, 13, 15, 32, 33, 34, 35, 38, 39, 40, 47, 48],\n  },\n  {\n    id: 5,\n    resumeTypes: [\n      ResumeType.SeniorSoftwareEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.Architect,\n      ResumeType.SeniorDataEngineer,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.SeniorSoftwareEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.Architect,\n          ResumeType.SeniorDataEngineer,\n        ],\n        [\n          \"Supported raising non-dilutive capital through the Cardano Catalyst project\",\n          \"Built mediators.ai, the marketplace for mediation (FE & BE)\",\n          \"Graph-based recommendations\",\n          \"Constructed bare metal Kubernetes platform to manage interactions with the Cardano blockchain across Unix Domain Sockets\",\n          \"Developed three products for the Cardano community (adatar.me, PAB Log Processor, PMMarketplace)\",\n          \"Taught a course on the Haskell programming language (Haskell <> Coffee on YouTube)\",\n        ],\n      ],\n    ],\n    description: \"\",\n    startDate: DateTime.fromFormat(\"2021-11-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2022-10-01\", yyyyMMdd),\n    title: \"Cofounder and CTO\",\n    subtitle: \"Loxe, Inc.\",\n    location: \"Remote (Los Angeles, CA)\",\n    skillsUsed: [\n      52, 53, 54, 1, 2, 5, 6, 7, 13, 29, 32, 33, 34, 35, 40, 41, 48, 49,\n    ],\n  },\n];\n", "import React, { useContext, useMemo, useState } from \"react\";\nimport { ResumeSkill, ResumeSkillProficiency } from \"./types\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport { DateTime } from \"luxon\";\n\nexport default function SkillComponent({\n  skill,\n  isLast,\n}: {\n  skill: ResumeSkill;\n  isLast: boolean;\n}) {\n  const { SlTooltip, SlDetails, SlSelect, SlOption } =\n    useContext(ShoelaceContext);\n  return (\n    <React.Fragment key={`skill-${skill.id}`}>\n      <SlTooltip>\n        <span className=\"cursor-pointer\">\n          {skill.title}\n          {isLast ? \"\" : \", \"}\n        </span>\n        <div slot=\"content\">\n          <div>\n            <p>Proficiency: {ResumeSkillProficiency[skill.profieciency]}</p>\n            <p>\n              Length used:{\" \"}\n              {Math.round(\n                skill.endDate\n                  ? skill.endDate.diff(skill.startDate, \"years\").years\n                  : DateTime.now().diff(skill.startDate, \"years\").years\n              )}{\" \"}\n              years\n            </p>\n            {skill.subtitle && <p>{skill.subtitle}</p>}\n          </div>\n        </div>\n      </SlTooltip>\n    </React.Fragment>\n  );\n}\n", "import { useContext } from \"react\";\nimport { skills } from \"./skills\";\nimport { ResumeType, ResumeJob } from \"./types\";\nimport { ShoelaceContext } from \"~/shoelace\";\n\nexport default function JobComponent({\n  j,\n  selectedResumeType,\n}: {\n  j: ResumeJob;\n  selectedResumeType: ResumeType;\n}) {\n  const { SlTooltip, SlDetails, SlSelect, SlOption } =\n    useContext(ShoelaceContext);\n\n  return (\n    <SlDetails>\n      <div className=\"w-11/12\" slot=\"summary\">\n        <h3 className=\"font-medium text-lg\">{j.title}</h3>\n        <h4 className=\"text-sm italic flex flex-wrap items-start justify-between\">\n          <div className=\"basis-1/3\">{j.subtitle}</div>\n          <div className=\"basis-2/3 md:basis-1/3\">{j.location}</div>\n          <div className=\"basis-full md:basis-1/3\">\n            {j.startDate.toFormat(\"M/yyyy\")} -{\" \"}\n            {j.endDate ? j.endDate.toFormat(\"M/yyyy\") : \"Present\"}\n          </div>\n        </h4>\n      </div>\n      <h5 className=\"-mt-2\">Accomplishments:</h5>\n      <ul className=\"list list-disc pl-4\">\n        {j.accomplishments\n          .filter((a) => a[0].includes(ResumeType[selectedResumeType]))\n          .map((a) => a[1])\n          .flat()\n          .map((a, i) => (\n            <li key={`accomplishment-${i}`}>{a}</li>\n          ))}\n      </ul>\n      <h5 className=\"mt-3\">Skills used:</h5>\n      {j.skillsUsed.map(\n        (s, i, su) =>\n          `${skills.find((sk) => sk.id === s)?.title}${\n            su.length - 1 > i ? \", \" : \"\"\n          }`\n      )}\n    </SlDetails>\n  );\n}\n", "import { DateTime } from \"luxon\";\nimport { ResumeEducation, ResumeType } from \"./types\";\nimport { yyyyMMdd } from \"~/constants/dates\";\n\nexport const schools: ResumeEducation[] = [\n  {\n    id: 1,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    startDate: DateTime.fromFormat(\"2016-06-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-08-01\", yyyyMMdd),\n    GPA: 4.0,\n    title: \"Masters in Computer Science\",\n    subtitle: \"California State Polytechnic University, Pomona\",\n    location: \"Pomona, CA\",\n    description: \"\",\n    skillsUsed: [\n      1, 3, 5, 6, 9, 10, 16, 17, 18, 19, 20, 24, 33, 34, 35, 39, 41, 49, 56, 57,\n      58, 59,\n    ],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.MachineLearningEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorDataEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.SeniorSoftwareEngineer,\n        ],\n        [\n          \"Thesis: using CNN, RNN, GRU combination to track, localize, and phenotype mouse behavior from video.\",\n        ],\n      ],\n    ],\n  },\n  {\n    id: 2,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    startDate: DateTime.fromFormat(\"2016-06-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2019-08-01\", yyyyMMdd),\n    GPA: 3.8,\n    title: \"Prerequisites for MS in Computer Science\",\n    subtitle: \"Pasadena City College\",\n    location: \"Pasadena, CA\",\n    description: \"\",\n    skillsUsed: [3, 5, 10, 59],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.MachineLearningEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorDataEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.SeniorSoftwareEngineer,\n        ],\n        [],\n      ],\n    ],\n  },\n  {\n    id: 3,\n    resumeTypes: [\n      ResumeType.Architect,\n      ResumeType.MachineLearningEngineer,\n      ResumeType.SeniorBackendEngineer,\n      ResumeType.SeniorDataEngineer,\n      ResumeType.SeniorFullstackEngineer,\n      ResumeType.SeniorSoftwareEngineer,\n    ],\n    startDate: DateTime.fromFormat(\"2001-08-01\", yyyyMMdd),\n    endDate: DateTime.fromFormat(\"2003-06-01\", yyyyMMdd),\n    GPA: 3.763,\n    title: \"Masters in Social Work (MSW)\",\n    subtitle: \"California State University Los Angeles\",\n    location: \"Los Angeles, CA\",\n    description: \"\",\n    skillsUsed: [60, 61, 62],\n    accomplishments: [\n      [\n        [\n          ResumeType.Architect,\n          ResumeType.MachineLearningEngineer,\n          ResumeType.SeniorBackendEngineer,\n          ResumeType.SeniorDataEngineer,\n          ResumeType.SeniorFullstackEngineer,\n          ResumeType.SeniorSoftwareEngineer,\n        ],\n        [\"Specialization in Aging and Families\", \"Thesis: Caregiver burden\"],\n      ],\n    ],\n  },\n];\n", "import { useContext, useMemo } from \"react\";\nimport { ResumeEducation, ResumeType } from \"./types\";\nimport { ShoelaceContext } from \"~/shoelace\";\nimport { skills } from \"./skills\";\n\nexport default function School({\n  s,\n  resumeType,\n}: {\n  s: ResumeEducation;\n  resumeType: ResumeType;\n}) {\n  const { SlTooltip, SlDetails, SlSelect, SlOption } =\n    useContext(ShoelaceContext);\n  const accomplishments = useMemo(\n    () =>\n      s.accomplishments.filter((a) => a[0].includes(ResumeType[resumeType])),\n    [s.accomplishments]\n  );\n  return (\n    <SlDetails>\n      <div className=\"w-11/12\" slot=\"summary\">\n        <h3 className=\"font-medium text-lg\">\n          {s.title}\n          <span className=\"text-sm ml-2 font-semibold\">\n            (GPA: {s.GPA.toFixed(2)})\n          </span>\n        </h3>\n        <h4 className=\"text-sm italic flex flex-wrap items-start justify-between\">\n          <div className=\"basis-1/3\">{s.subtitle}</div>\n          <div className=\"basis-2/3 md:basis-1/3\">{s.location}</div>\n          <div className=\"basis-full md:basis-1/3\">\n            {s.startDate.toFormat(\"M/yyyy\")} -{\" \"}\n            {s.endDate ? s.endDate.toFormat(\"M/yyyy\") : \"Present\"}\n          </div>\n        </h4>\n      </div>\n      {accomplishments.some((a) => a[1].length > 0) ? (\n        <>\n          <h5 className=\"-mt-2\">Accomplishments:</h5>\n          <ul className=\"list list-disc pl-4\">\n            {accomplishments\n              .map((a) => a[1])\n              .flat()\n              .map((a, i) => (\n                <li key={`accomplishment-${i}`}>{a}</li>\n              ))}\n          </ul>\n        </>\n      ) : null}\n      <h5\n        className={`${\n          accomplishments.some((a) => a[1].length > 0) ? \"mt-3\" : \"-mt-2\"\n        }`}\n      >\n        Skills used:\n      </h5>\n      {s.skillsUsed.map(\n        (skillUsed, i, skillsUsed) =>\n          `${skills.find((sk) => sk.id === skillUsed)?.title}${\n            skillsUsed.length - 1 > i ? \", \" : \"\"\n          }`\n      )}\n    </SlDetails>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-D334MTWT.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-MBEN6P25.js','/build/_shared/chunk-YW5NJ4SB.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-UMACH7QE.js','imports':['/build/_shared/chunk-WVWEAPAP.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-N66HDTFZ.js','imports':['/build/_shared/chunk-GX5QH64Y.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/resume':{'id':'routes/resume','parentId':'root','path':'resume','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resume-PIGEG5KJ.js','imports':['/build/_shared/chunk-GX5QH64Y.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/simple-pwd-generator._index':{'id':'routes/simple-pwd-generator._index','parentId':'root','path':'simple-pwd-generator','index':true,'caseSensitive':undefined,'module':'/build/routes/simple-pwd-generator._index-7EGYKYSV.js','imports':['/build/_shared/chunk-GX5QH64Y.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/simple-pwd-generator.privacy':{'id':'routes/simple-pwd-generator.privacy','parentId':'root','path':'simple-pwd-generator/privacy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/simple-pwd-generator.privacy-DLUWVLJG.js','imports':['/build/_shared/chunk-GX5QH64Y.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'226dc580','hmr':{'runtime':'/build/_shared/chunk-YW5NJ4SB.js','timestamp':1723421013175},'url':'/build/manifest-226DC580.js'};", "\nimport * as entryServer from \"/Users/eliselkin/Workspace/eliselkin.com/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/simple-pwd-generator.privacy.tsx\";\nimport * as route2 from \"./routes/simple-pwd-generator._index.tsx\";\nimport * as route3 from \"./routes/_index.tsx\";\nimport * as route4 from \"./routes/resume.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false,\"unstable_lazyRouteDiscovery\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/simple-pwd-generator.privacy\": {\n      id: \"routes/simple-pwd-generator.privacy\",\n      parentId: \"root\",\n      path: \"simple-pwd-generator/privacy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/simple-pwd-generator._index\": {\n      id: \"routes/simple-pwd-generator._index\",\n      parentId: \"root\",\n      path: \"simple-pwd-generator\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/resume\": {\n      id: \"routes/resume\",\n      parentId: \"root\",\n      path: \"resume\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "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",
  "names": ["URL", "jsxDEV", "links", "Link", "useNavigate", "useContext", "useState", "jsxDEV", "Fragment", "jsxDEV", "useNavigate", "useState", "useContext", "open", "Link", "jsxDEV", "links", "Link", "useContext", "Fragment", "jsxDEV", "useContext", "Link", "meta", "Link", "jsxDEV", "Link", "jsxDEV", "meta", "useContext", "useMemo", "useState", "ResumeType", "ResumeSkillType", "ResumeSkillProficiency", "DateTime", "DateTime", "useContext", "DateTime", "jsxDEV", "useContext", "useContext", "jsxDEV", "useContext", "DateTime", "DateTime", "useContext", "useMemo", "Fragment", "jsxDEV", "useContext", "useMemo", "jsxDEV", "useContext", "useState", "useMemo", "jsxDEV"]
}
